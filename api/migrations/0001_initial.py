# Generated by Django 5.2.3 on 2025-07-11 22:08

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Key',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('key_url', models.TextField()),
                ('fase', models.CharField(choices=[('F1', 'Fase 1'), ('F2', 'Fase 2')], max_length=10)),
                ('category', models.CharField(choices=[('primario', 'Primário'), ('secundario', 'Secundário'), ('medio', 'Médio')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('variant', models.CharField(choices=[('A', 'A'), ('B', 'B')], max_length=10)),
                ('matrix', models.JSONField()),
                ('classe', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('grade', models.IntegerField()),
                ('turma', models.CharField(max_length=50)),
                ('course', models.CharField(default='N/A', max_length=255, null=True)),
                ('category', models.CharField(choices=[('primario', 'Primário'), ('secundario', 'Secundário'), ('medio', 'Médio')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_matrix', models.JSONField(default=list, null=True)),
                ('answer_img_url', models.TextField()),
                ('note', models.FloatField(blank=True, null=True)),
                ('corrects', models.IntegerField(blank=True, null=True)),
                ('wrongs', models.IntegerField(blank=True, null=True)),
                ('nulls', models.IntegerField(blank=True, null=True)),
                ('fase', models.CharField(choices=[('F1', 'Fase 1'), ('F2', 'Fase 2')], max_length=10)),
                ('status', models.CharField(choices=[('Reprovado', 'Reprovado'), ('Aprovado', 'Aprovado')], default=None, max_length=20, null=True)),
                ('chave', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.key')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='api.student')),
            ],
        ),
    ]
